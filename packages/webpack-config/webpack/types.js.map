{"version":3,"file":"types.js","sourceRoot":"","sources":["../src/types.ts"],"names":[],"mappings":"","sourcesContent":["export interface Environment {\n  https: boolean;\n  config: { [key: string]: any };\n  locations?: FilePaths;\n  projectRoot: string;\n  production?: boolean;\n  development?: boolean;\n  polyfill?: boolean;\n  mode?: Mode;\n}\n\ntype PathResolver = (input: string) => string;\n\nexport interface FilePathsFolder {\n  get: PathResolver;\n  folder: string;\n  indexHtml: string;\n  manifest: string;\n  serveJson: string;\n  favicon: string;\n}\nexport interface FilePaths {\n  absolute: PathResolver;\n  includeModule: PathResolver;\n  template: FilePathsFolder;\n  production: FilePathsFolder;\n  packageJson: string;\n  root: string;\n  appMain: string;\n  modules: string;\n  //   [route: string]: string | PathResolver | FilePathsFolder;\n}\n\nexport type Mode = 'production' | 'development' | 'none';\n\nexport interface Arguments {\n  allowedHost: any;\n  proxy: any;\n  [key: string]: any;\n}\n"]}