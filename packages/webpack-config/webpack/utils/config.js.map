{"version":3,"file":"config.js","sourceRoot":"","sources":["../../src/utils/config.ts"],"names":[],"mappings":";;AAAA,SAAS,QAAQ,CAAC,GAAQ;IACxB,IAAI,GAAG,KAAK,IAAI,EAAE;QAChB,OAAO,KAAK,CAAC;KACd;IACD,OAAO,OAAO,GAAG,KAAK,UAAU,IAAI,OAAO,GAAG,KAAK,QAAQ,CAAC;AAC9D,CAAC;AAED;;;;;GAKG;AAEH,SAAgB,0BAA0B,CACxC,IAAS,EACT,MAA8B,EAC9B,QAAiB,KAAK;IAEtB,gDAAgD;IAChD,IAAI,IAAI,EAAE;QACR,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,KAAK,EAAE;YAC3B,yBACK,MAAM,EACN,IAAI,EACP;SACH;QACD,4BAA4B;QAC5B,OAAO,MAAM,CAAC;KACf;IACD,uCAAuC;IACvC,OAAO,IAAI,CAAC;AACd,CAAC;AAlBD,gEAkBC;AAED;;GAEG;AACH,SAAgB,4BAA4B,CAC1C,IAAS,EACT,MAA8B,EAC9B,QAAiB,KAAK;IAEtB,IAAI,IAAI,KAAK,SAAS,EAAE;QACtB,OAAO,MAAM,CAAC;KACf;IACD,OAAO,0BAA0B,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;AACzD,CAAC;AATD,oEASC","sourcesContent":["function isObject(val: any): boolean {\n  if (val === null) {\n    return false;\n  }\n  return typeof val === 'function' || typeof val === 'object';\n}\n\n/**\n * Given a config option that could evalutate to true, config, or null; return a config.\n * e.g.\n * `polyfill: true` returns the `config`\n * `polyfill: {}` returns `{}`\n */\n\nexport function enableWithPropertyOrConfig(\n  prop: any,\n  config: { [key: string]: any },\n  merge: boolean = false\n): any {\n  // Value is truthy but not a replacement config.\n  if (prop) {\n    if (isObject(prop) && merge) {\n      return {\n        ...config,\n        ...prop,\n      };\n    }\n    // Return the default config\n    return config;\n  }\n  // Return falsey or replacement config.\n  return prop;\n}\n\n/**\n * Used for features that are enabled by default unless specified otherwise.\n */\nexport function overrideWithPropertyOrConfig(\n  prop: any,\n  config: { [key: string]: any },\n  merge: boolean = false\n): any {\n  if (prop === undefined) {\n    return config;\n  }\n  return enableWithPropertyOrConfig(prop, config, merge);\n}\n"]}