{"version":3,"file":"getConfigAsync.js","sourceRoot":"","sources":["../../src/utils/getConfigAsync.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,yCAA+C;AAC/C,oEAA4C;AAG5C,SAAe,cAAc,CAAC,GAAgB;;QAC5C,IAAI,GAAG,CAAC,MAAM,EAAE;YACd,OAAO,GAAG,CAAC,MAAM,CAAC;SACnB;QACD,MAAM,SAAS,GAAG,MAAM,uBAAa,CAAC,GAAG,CAAC,CAAC;QAC3C,2CAA2C;QAC3C,OAAO,wBAAe,CAAC,GAAG,CAAC,WAAW,EAAE,SAAS,CAAC,QAAQ,EAAE;YAC1D,YAAY,EAAE,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC;SACjD,CAAC,CAAC;IACL,CAAC;CAAA;AAED,kBAAe,cAAc,CAAC","sourcesContent":["import { getConfigForPWA } from '@expo/config';\nimport getPathsAsync from './getPathsAsync';\nimport { Environment } from '../types';\n\nasync function getConfigAsync(env: Environment): Promise<{ [key: string]: any }> {\n  if (env.config) {\n    return env.config;\n  }\n  const locations = await getPathsAsync(env);\n  // Fill all config values with PWA defaults\n  return getConfigForPWA(env.projectRoot, locations.absolute, {\n    templateIcon: locations.template.get('icon.png'),\n  });\n}\n\nexport default getConfigAsync;\n"]}